{"ast":null,"code":"// import React, { useState } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import { Button, Row, Col, Container, Form, ListGroup, Group, Label, Control, Text } from 'react-bootstrap';\n// import Confetti from \"react-confetti\";\n// import FigureImage from \"react-bootstrap/esm/FigureImage\";\n// import TodoList from \"./TodoList\";\n// import axios from 'axios';\n// function onClickHandler(e) {\n//   //preventDefault um Prozesse vorher zu beenden\n//   e.preventDefault();\n// }\n// export default function Todo(props) {\n//   function yeah() {\n//     alert(\"checked\");\n//   }\n//   const [newName, setName] = useState('');\n//   var arrayOfTodos = <TodoList/>;\n//   console.log(\"TOODOOOOS\" + arrayOfTodos);\n//   function handleChange(e) {\n//     setName(e.target.value);\n//   }\n//   const [height, setHeight] = useState(null);\n//   const [width, setWidth] = useState(null);\n//   let everythingDone = null;\n//   function isEverythingDone() {\n//     if (props.completed == true) {\n//       everythingDone = <Confetti width={1000} height={1000} />\n//     } else {\n//       everythingDone = null;\n//     }\n//   }\n//   const [isEdiging, notEditing] = useState(false);\n//   function handleSubmit(e) {\n//     var y = newName;\n//     if (y == \"\" || y == \" \") {\n//       // alert(\"add input\");\n//       props.notifyEmptyInput();\n//       e.preventDefault();\n//       notEditing(false);\n//     } else {\n//       e.preventDefault();\n//       props.editTodo(props.id, newName);\n//       setName(\"\");\n//       notEditing(false);\n//     }\n//   }\n//   const editingView = (\n//     <form onSubmit={handleSubmit}>\n//       <ListGroup.Item>\n//         <Row>\n//           <Col>\n//             <input className=\"checkboxes\" id=\"todo-0\" type=\"checkbox\" defaultChecked={props.completed} onChange={() => props.toggleTaskCompleted(props.id)} />\n//           </Col>\n//           <Col>\n//             {/* <Form.Group controlID=\"Text01\"> */}\n//             {/* <Form.Control type=\"input\"></Form.Control> */}\n//             {/* </Form.Group> */}\n//             <input id={props.id} type=\"text\" value={newName} onChange={handleChange} />\n//           </Col>\n//           <Col>\n//             <Form.Group controlID=\"Check02\">\n//               {/* <Button variant=\"success\">DONE</Button> */}\n//               <Button onClick={onClickHandler} variant=\"success\" onClick={handleSubmit}>SAVE</Button>\n//               <Button onClick={onClickHandler} variant=\"danger\" onClick={() => notEditing(false)}>CANCEL</Button>\n//             </Form.Group>\n//           </Col>\n//         </Row>\n//       </ListGroup.Item>\n//     </form>\n//   )\n//   const normalView = (\n//     <ListGroup.Item>\n//       <Row>\n//         {props.everythingDone}\n//         <Col>\n//           <input className=\"checkboxes\" id=\"todo-0\" type=\"checkbox\" defaultChecked={props.completed} onChange={() => props.toggleTaskCompleted(props.id)} />\n//         </Col>\n//         <Col>\n//           {/* <Form.Group controlID=\"Text01\"> */}\n//           {/* <Form.Control type=\"input\"></Form.Control> */}\n//           {/* </Form.Group> */}\n//           {/* <TodoList/> */}\n//           {props.name}\n//         </Col>\n//         <Col>\n//           <Form.Group controlID=\"Check02\">\n//             {/* <Button variant=\"success\">DONE</Button> */}\n//             <Button onClick={onClickHandler} variant=\"primary\" onClick={() => notEditing(true)}>EDIT</Button>\n//             <Button onClick={onClickHandler} variant=\"danger\" onClick={() => props.deleteTodo(props.id)}>DELETE</Button>\n//           </Form.Group>\n//         </Col>\n//       </Row>\n//     </ListGroup.Item>\n//   )\n//   return (\n//     <li>{isEdiging ? editingView : normalView}</li>\n//   )\n// }","map":{"version":3,"sources":["/Users/maluschymanski/Desktop/homework_sipgate/homework-maluechen-716992803757/app/src/Todo.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA","sourcesContent":["// import React, { useState } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n// import { Button, Row, Col, Container, Form, ListGroup, Group, Label, Control, Text } from 'react-bootstrap';\n// import Confetti from \"react-confetti\";\n// import FigureImage from \"react-bootstrap/esm/FigureImage\";\n// import TodoList from \"./TodoList\";\n// import axios from 'axios';\n\n\n\n// function onClickHandler(e) {\n//   //preventDefault um Prozesse vorher zu beenden\n//   e.preventDefault();\n// }\n\n// export default function Todo(props) {\n\n//   function yeah() {\n//     alert(\"checked\");\n//   }\n\n//   const [newName, setName] = useState('');\n\n//   var arrayOfTodos = <TodoList/>;\n//   console.log(\"TOODOOOOS\" + arrayOfTodos);\n\n//   function handleChange(e) {\n//     setName(e.target.value);\n//   }\n\n//   const [height, setHeight] = useState(null);\n//   const [width, setWidth] = useState(null);\n\n//   let everythingDone = null;\n\n//   function isEverythingDone() {\n//     if (props.completed == true) {\n//       everythingDone = <Confetti width={1000} height={1000} />\n//     } else {\n//       everythingDone = null;\n//     }\n//   }\n\n//   const [isEdiging, notEditing] = useState(false);\n\n//   function handleSubmit(e) {\n//     var y = newName;\n//     if (y == \"\" || y == \" \") {\n//       // alert(\"add input\");\n//       props.notifyEmptyInput();\n//       e.preventDefault();\n//       notEditing(false);\n//     } else {\n//       e.preventDefault();\n//       props.editTodo(props.id, newName);\n//       setName(\"\");\n//       notEditing(false);\n//     }\n//   }\n\n//   const editingView = (\n\n//     <form onSubmit={handleSubmit}>\n//       <ListGroup.Item>\n//         <Row>\n//           <Col>\n//             <input className=\"checkboxes\" id=\"todo-0\" type=\"checkbox\" defaultChecked={props.completed} onChange={() => props.toggleTaskCompleted(props.id)} />\n//           </Col>\n//           <Col>\n//             {/* <Form.Group controlID=\"Text01\"> */}\n//             {/* <Form.Control type=\"input\"></Form.Control> */}\n//             {/* </Form.Group> */}\n//             <input id={props.id} type=\"text\" value={newName} onChange={handleChange} />\n//           </Col>\n//           <Col>\n//             <Form.Group controlID=\"Check02\">\n//               {/* <Button variant=\"success\">DONE</Button> */}\n//               <Button onClick={onClickHandler} variant=\"success\" onClick={handleSubmit}>SAVE</Button>\n//               <Button onClick={onClickHandler} variant=\"danger\" onClick={() => notEditing(false)}>CANCEL</Button>\n//             </Form.Group>\n//           </Col>\n//         </Row>\n//       </ListGroup.Item>\n//     </form>\n\n//   )\n\n//   const normalView = (\n\n//     <ListGroup.Item>\n//       <Row>\n//         {props.everythingDone}\n//         <Col>\n//           <input className=\"checkboxes\" id=\"todo-0\" type=\"checkbox\" defaultChecked={props.completed} onChange={() => props.toggleTaskCompleted(props.id)} />\n//         </Col>\n//         <Col>\n//           {/* <Form.Group controlID=\"Text01\"> */}\n//           {/* <Form.Control type=\"input\"></Form.Control> */}\n//           {/* </Form.Group> */}\n//           {/* <TodoList/> */}\n//           {props.name}\n//         </Col>\n//         <Col>\n//           <Form.Group controlID=\"Check02\">\n//             {/* <Button variant=\"success\">DONE</Button> */}\n//             <Button onClick={onClickHandler} variant=\"primary\" onClick={() => notEditing(true)}>EDIT</Button>\n//             <Button onClick={onClickHandler} variant=\"danger\" onClick={() => props.deleteTodo(props.id)}>DELETE</Button>\n//           </Form.Group>\n//         </Col>\n//       </Row>\n//     </ListGroup.Item>\n\n//   )\n\n\n//   return (\n//     <li>{isEdiging ? editingView : normalView}</li>\n//   )\n// }"]},"metadata":{},"sourceType":"module"}